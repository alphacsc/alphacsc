name: unittests

on:
  push:
    branches: master
  pull_request:
    paths-ignore:
      - 'doc/**'

jobs:
  unittests:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install alphasc
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[test]
    - name: Test with pytest
      run: |
        python -m pytest --no-cov

  coverage:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python: [3.8]
        dicodile: [false, true]
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python }}
          channels: conda-forge
      - name: Install alphacsc
        run: |
          conda --version
          which python
          pip install -e .[test]
      - name: Install dicodile
        if: ${{ matrix.dicodile }}
        run: |
          echo "localhost slots=16">hostfile
          conda install -y openmpi mpi4py && pip install -e .[dicodile]
      - name: Run unit tests
        env:
          MPI_HOSTFILE: hostfile
        run: |
          pytest --cov=alphacsc --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v2
        with:
          flags: unittests 
          fail_ci_if_error: true 
          verbose: true
